{
  "contractName": "SimpleStorage",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "x",
          "type": "string"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"x\",\"type\":\"string\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jhanagustave/Blockchain/projectBlockchain/contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jhanagustave/Blockchain/projectBlockchain/contracts/SimpleStorage.sol\":{\"keccak256\":\"0x9891436ab8aab4cdc812b142f4d751239a7784c3fae2211c99a6d3e7304341c0\",\"urls\":[\"bzz-raw://bd768c35386469efe69a8030142cfef53ad99fe81e9fdc4a96b0d0893aaa1455\",\"dweb:/ipfs/QmW6ZpHVx8pASZwCnFZDncciT4mSMLeFY5VWG8WyjxvCVK\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3460b0a64cb8721f1b9f4db6518efd3d9b6a948aea83a961b797da129d94d0a8\",\"urls\":[\"bzz-raw://e410211b288c4d648e677a15cf47557881e2ec8c516ec948b2eb24effc810e3d\",\"dweb:/ipfs/QmW6AGCS7NqRjztc5FFCWXxp44iCZ5iZ5A3AXE2ppkpLbg\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe125bc9b647e0476baa7d85613c810bb0c47b8293a8d07d9e91ebf38cf780e5c\",\"urls\":[\"bzz-raw://6d58fc325c18d70582260bc1636d40978a7dd97e35e1317b891aeda3fe8e0a23\",\"dweb:/ipfs/QmYfZEx2yxmqaomV7bXEYXkFJMFXp1CDTZgUga9NTj3DUu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610310806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ed3885e1461003b5780636d4ce63c146100f6575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610179565b005b6100fe610193565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013e578082015181840152602081019050610123565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b806000908051906020019061018f929190610235565b5050565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027657805160ff19168380011785556102a4565b828001600101855582156102a4579182015b828111156102a3578251825591602001919060010190610288565b5b5090506102b191906102b5565b5090565b6102d791905b808211156102d35760008160009055506001016102bb565b5090565b9056fea264697066735822122055cf295a9f35c5d0505c6508e85e987b8cb03df132507f908954e22cbef9f2ce64736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634ed3885e1461003b5780636d4ce63c146100f6575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610179565b005b6100fe610193565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013e578082015181840152602081019050610123565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b806000908051906020019061018f929190610235565b5050565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027657805160ff19168380011785556102a4565b828001600101855582156102a4579182015b828111156102a3578251825591602001919060010190610288565b5b5090506102b191906102b5565b5090565b6102d791905b808211156102d35760008160009055506001016102bb565b5090565b9056fea264697066735822122055cf295a9f35c5d0505c6508e85e987b8cb03df132507f908954e22cbef9f2ce64736f6c63430006000033",
  "sourceMap": "176:2876:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:2876:1;;;;;;;",
  "deployedSourceMap": "176:2876:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:2876:1;;;;;;;;;;;;;;;;;;;;;;;;229:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;229:66:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;229:66:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;229:66:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;229:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;229:66:1;;;;;;;;;;;;;;;:::i;:::-;;301:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;301:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229:66;287:1;276:8;:12;;;;;;;;;;;;:::i;:::-;;229:66;:::o;301:83::-;337:13;369:8;362:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:83;:::o;176:2876::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n\ncontract SimpleStorage {\n\n     string ipfsHash;\n\n    function set(string memory x) public {\n        ipfsHash = x;\n    }\n\n    function get() public view returns (string memory) {\n        return ipfsHash;\n    }\n\n//     // Private state variable \n//     address payable owner;  \n\n//      // Defining a constructor    \n//      constructor() public{    \n//         owner=msg.sender; \n//     } \n  \n//     // Function to get  \n//     // address of owner \n//     function getOwner( \n//     ) public view returns (address) {     \n//         return owner; \n//     } \n  \n//     // Function to return  \n//     // current balance of owner \n//     function getBalance( \n//     ) public view returns(uint256){ \n//         return owner.balance; \n//     } \n\n//     modifier onlyOwner {\n//         require(\n//             msg.sender == owner,\n//             \"Only owner can call this function.\"\n//         );\n//         _;\n//     }\n\n\n\n    \n\n\n// //Using SafeMath\n//   using SafeMath for uint;\n//     function exec(uint a, uint b) public pure returns (uint){\n//         return a.add(b);\n//     }\n \n \n//   //security features to protect \n\n//   mapping (address => uint256) public balanceOf;\n\n//   function transfer(address _to, uint256 _value) public {\n//     /* Check if sender has balance and for overflows */\n//     require(balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]);\n\n//     /* Add and subtract new balances */\n//     balanceOf[msg.sender] -= _value;\n//     balanceOf[_to] += _value;\n// }\n\n//      // Reentrancy \n//     mapping (address => uint) private userBalances;\n\n//     function withdrawBalance() public {\n//     uint amountToWithdraw = userBalances[msg.sender];\n//     userBalances[msg.sender] = 0;\n//     (bool success, ) = msg.sender.call.value(amountToWithdraw)(\"\"); // The user's balance is already 0, so future invocations won't withdraw anything\n//     require(success);\n//     }\n\n\n//     // Used by Circuit Breaker pattern to switch contract on / off\n//     bool private stopped = false;\n\n//     /**\n//     * @dev Indicates that the owner has performed an emergency stop\n//     * @param _owner The owner of the image\n//     * @param _stop Indicates whether to stop or resume\n//     */\n//     event LogEmergencyStop(\n//         address indexed _owner, \n//         bool _stop\n//     );\n\n//     /**\n//     * @dev Prevents execution in the case of an emergency\n//     */\n//     modifier stopInEmergency { \n//         require(!stopped); \n//         _;\n//     }\n\n\n//      /**\n//     * @notice Pause the contract. \n//     * It stops execution if certain conditions are met and can be useful \n//     * when new errors are discovered. \n//     * @param _stop Switch the circuit breaker on or off\n//     */\n\n//     function emergencyStop(bool _stop) onlyOwner public {\n//         stopped = _stop;\n//         emit LogEmergencyStop(owner, _stop);\n//     }\n}\n",
  "sourcePath": "/home/jhanagustave/Blockchain/projectBlockchain/contracts/SimpleStorage.sol",
  "ast": {
    "absolutePath": "/home/jhanagustave/Blockchain/projectBlockchain/contracts/SimpleStorage.sol",
    "exportedSymbols": {
      "SimpleStorage": [
        81
      ]
    },
    "id": 82,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 82,
        "sourceUnit": 292,
        "src": "66:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 82,
        "sourceUnit": 776,
        "src": "118:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 81,
        "linearizedBaseContracts": [
          81
        ],
        "name": "SimpleStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 62,
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 81,
            "src": "207:15:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 61,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "207:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "266:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "276:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "287:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "276:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "276:12:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4ed3885e",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 72,
                  "src": "242:15:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:17:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:1"
            },
            "scope": 81,
            "src": "229:66:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "352:32:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "ipfsHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "369:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 76,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "362:15:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6d4ce63c",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 80,
                  "src": "337:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:15:1"
            },
            "scope": 81,
            "src": "301:83:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 82,
        "src": "176:2876:1"
      }
    ],
    "src": "32:3021:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/jhanagustave/Blockchain/projectBlockchain/contracts/SimpleStorage.sol",
      "exportedSymbols": {
        "SimpleStorage": [
          81
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.7",
            ".0"
          ]
        },
        "id": 58,
        "name": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "attributes": {
          "SourceUnit": 292,
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 82,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 59,
        "name": "ImportDirective",
        "src": "66:51:1"
      },
      {
        "attributes": {
          "SourceUnit": 776,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 82,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 60,
        "name": "ImportDirective",
        "src": "118:55:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            81
          ],
          "name": "SimpleStorage",
          "scope": 82
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "ipfsHash",
              "overrides": null,
              "scope": 81,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 61,
                "name": "ElementaryTypeName",
                "src": "207:6:1"
              }
            ],
            "id": 62,
            "name": "VariableDeclaration",
            "src": "207:15:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "4ed3885e",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "set",
              "overrides": null,
              "scope": 81,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "x",
                      "overrides": null,
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 63,
                        "name": "ElementaryTypeName",
                        "src": "242:6:1"
                      }
                    ],
                    "id": 64,
                    "name": "VariableDeclaration",
                    "src": "242:15:1"
                  }
                ],
                "id": 65,
                "name": "ParameterList",
                "src": "241:17:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 66,
                "name": "ParameterList",
                "src": "266:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 62,
                              "type": "string storage ref",
                              "value": "ipfsHash"
                            },
                            "id": 67,
                            "name": "Identifier",
                            "src": "276:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 64,
                              "type": "string memory",
                              "value": "x"
                            },
                            "id": 68,
                            "name": "Identifier",
                            "src": "287:1:1"
                          }
                        ],
                        "id": 69,
                        "name": "Assignment",
                        "src": "276:12:1"
                      }
                    ],
                    "id": 70,
                    "name": "ExpressionStatement",
                    "src": "276:12:1"
                  }
                ],
                "id": 71,
                "name": "Block",
                "src": "266:29:1"
              }
            ],
            "id": 72,
            "name": "FunctionDefinition",
            "src": "229:66:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "6d4ce63c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "get",
              "overrides": null,
              "scope": 81,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 73,
                "name": "ParameterList",
                "src": "313:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 80,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 74,
                        "name": "ElementaryTypeName",
                        "src": "337:6:1"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclaration",
                    "src": "337:13:1"
                  }
                ],
                "id": 76,
                "name": "ParameterList",
                "src": "336:15:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 76
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 62,
                          "type": "string storage ref",
                          "value": "ipfsHash"
                        },
                        "id": 77,
                        "name": "Identifier",
                        "src": "369:8:1"
                      }
                    ],
                    "id": 78,
                    "name": "Return",
                    "src": "362:15:1"
                  }
                ],
                "id": 79,
                "name": "Block",
                "src": "352:32:1"
              }
            ],
            "id": 80,
            "name": "FunctionDefinition",
            "src": "301:83:1"
          }
        ],
        "id": 81,
        "name": "ContractDefinition",
        "src": "176:2876:1"
      }
    ],
    "id": 82,
    "name": "SourceUnit",
    "src": "32:3021:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x1fd8a6424996fcb73e71380685f86d34feb317dc811892630fd77cc70046e06a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_stop",
              "type": "bool"
            }
          ],
          "name": "LogEmergencyStop",
          "type": "event"
        },
        "0x4753b7d7d7b6713cb600756bd11cc8bf932ece70274edfbc01931256caaa63be": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_ipfsHash",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_title",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_description",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_tags",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_uploadedOn",
              "type": "uint256"
            }
          ],
          "name": "LogImageUploaded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5d50bBc750389700e37A23cB50Dc4748E1308936",
      "transactionHash": "0x5b762d521e0637b742828a9d4d63328fbf0dc171c63976bdcf51cd57382dd462"
    },
    "1609187849570": {
      "events": {},
      "links": {},
      "address": "0xe294c1F87e3eFad34bb0A8200Eb35E7839cd975b",
      "transactionHash": "0x2d021c60d01d5153a42613bd3413cb63bb07e2888059859236f5a830a95ec55c"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2020-12-31T14:39:12.823Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}